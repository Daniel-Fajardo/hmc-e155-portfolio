---
title: "Lab1: FPGA and MCU Setup and Testing"
author: "Daniel Fajardo"
date: "9/10/24"
categories:
    - labreport
---

# Introduction

This weeks lab was focused on setting up and testing the FPGA and MCU boards that will be used for the rest of the course. This lab 
involved soldering all the necessary components onto the e-155 protoboard, downloading the software interfaces: Lattice Radiant and 
SEGGER Embedded Studio, as well as the simulation software: ModelSim. Demo code was provided to verify that each software and hardware 
component was functioning correctly. Finally, the design part of the lab was to provide a 7 segment led digit display which corresponds 
to its binary input on the protoboard. This design was both simulated and verified with test vectors in ModelSim and was implemented 
with Lattice Radiant.

# Design and Testing Methodology

![Figure 1: 7-segment key](images/7-segment key.jpg){#1}

The 7-segment display contains seven leds corresponding to their orientation in the digit. These segments are turned on by driving a pin
in the fpga to 0V, so that the common anode in the display will produce a current through the appropriate led. To do this, a module for
the combinational logic was implemented based on the key in Figure 1. In addition to the segment logic, three on board leds were driven
(two were combinational from input and one blinked at 2.4 Hz). The blinking led was generated by the on-board high-speed oscillator from
the iCE40UP library, which was divided by a clock divider module to match the desired frequency.

# Technical Documentation

The source code for the project can be found in the associated [Github Repository](https://github.com/Daniel-Fajardo/e155-lab1/tree/main)

# Block Diagram

![Figure 2: Block diagram of the Verilog design](images/Lab1 Block Diagram.jpg)

The block diagram in Figure 2 illustrates the architecture of the Verilog HDL. The top module contains a high speed oscillator (HSOSC),
a counter, and two submodules: segment logic module, which contains combinational logic for the 7-segment output pins and a leds module,
which contains combinational logic for the on board LEDs.

# Schematic

![Figure 3: Schematic of the physical circuit](images/Lab1 Schematic.jpg)

The schematic, as illustrated by Figure 3, shows the circuit layout for both the internal FPGA operations and the external 7-segment
display. The schematic shows the internal pullup resistors (100 kOhms each) and digital switches which drive the output pins to 0 or
3.3V, and the on-board switches for the input pins. The schematic also shows the 390 Ohm resistors connected to the 7-segment pins to
avoid metastability.

# Results and Discussion

![Figure 4: Testbench simulation](images\Lab1 Testbench.jpg)

Figure 4 shows a simulation of a couple binary inputs to the system. The seg row shows the led segments in the 7-segment display as well
as the additional leds that will be lit for each input (note that seg is inverted when compared to the key in Figure 1, because the 
segments are active low).

![Figure 5: Digit 0 being illuminated](images\digit images\PXL_20240906_181113869.jpg)

Overall, the lab was successful. The 7-segment display properly illuminated each of the 16 hexidecimal bits (Figure 5 illustrates the
digit 0 being illuminated) and the on board leds followed the correct combinational logic and blinking frequency. The design was
simulated in QuestaSim manually with various input bits and each time output the correct segment bits. One shortcoming of the lab was
the lack of a testbench for QuestaSim, however with more time this would have been done. Additionally, the on-board led blinking
frequency was only roughly 2.4 Hz, but could be achieved with a counter with more efficiency than only powers of 2.

# Conclusion

The design successfully output each hexadecimal digit on the 7-segment display, and each led on the protoboard. Overall, 25 hours were
spent working on this lab, although much of that time was spent soldering the board and testing the software.